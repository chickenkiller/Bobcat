LAYOUT(ProfilesLayout, 751, 415)
	ITEM(Upp::ArrayCtrl, list, AutoHideSb(true).Removing(true).AskRemove(false).Moving(true).Track(true).VertGrid(false).HorzGrid(false).SetLineCy(24).LeftPosZ(4, 134).VSizePosZ(4, 4))
END_LAYOUT

LAYOUT(GeneralProfileLayout, 577, 337)
	ITEM(Upp::EditString, cmd, HSizePosZ(112, 4).TopPosZ(4, 19))
	ITEM(Upp::DropList, cmdexit, LeftPosZ(112, 201).BottomPosZ(14, 19))
	ITEM(Upp::EditString, dir, HSizePosZ(112, 4).TopPosZ(32, 19))
	ITEM(Upp::LineEdit, env, SetFont(Upp::Monospace()).HSizePosZ(112, 4).VSizePosZ(58, 62))
	ITEM(Upp::Option, noenv, SetLabel(t_("Don't inherit the environment")).LeftPosZ(112, 201).BottomPosZ(39, 19))
	ITEM(Upp::Label, dv___5, SetLabel(t_("Variables")).LeftPosZ(9, 96).TopPosZ(58, 19))
	ITEM(Upp::Label, dv___6, SetLabel(t_("Starting directory")).LeftPosZ(7, 96).TopPosZ(32, 19))
	ITEM(Upp::Label, dv___7, SetLabel(t_("Command line")).LeftPosZ(8, 96).TopPosZ(4, 19))
	ITEM(Upp::Label, dv___8, SetLabel(t_("On exit")).LeftPosZ(7, 96).BottomPosZ(14, 19))
END_LAYOUT

LAYOUT(VisualProfileLayout, 591, 413)
	ITEM(Upp::DataPusher, font, Tip(t_("Click to change font.")).HSizePosZ(8, 224).TopPosZ(24, 20))
	ITEM(Upp::EditIntSpin, linespacing, Min(0).Max(128).NotNull(true).RightPosZ(42, 75).TopPosZ(24, 20))
	ITEM(Upp::Option, adjustcolors, SetLabel(t_("Adjust colors to dark themes")).HSizePosZ(8, 224).BottomPosZ(68, 16))
	ITEM(Upp::Option, lightcolors, SetLabel(t_("Force bright colors")).HSizePosZ(8, 224).BottomPosZ(52, 16))
	ITEM(Upp::Option, intensify, SetLabel(t_("Use bright colors with bold text")).HSizePosZ(8, 224).BottomPosZ(37, 16))
	ITEM(Upp::Option, dynamiccolors, SetLabel(t_("Dynamic colors")).HSizePosZ(8, 224).BottomPosZ(21, 16))
	ITEM(Upp::DropList, cursorstyle, RightPosZ(14, 134).TopPosZ(72, 20))
	ITEM(Upp::Option, blinkcursor, SetLabel(t_("Blinking")).RightPosZ(20, 184).TopPosZ(95, 16))
	ITEM(Upp::Option, lockcursor, SetLabel(t_("Locked")).RightPosZ(20, 184).TopPosZ(112, 16))
	ITEM(Upp::OptionBox, blinktext, SetLabel(t_("Blinking Text")).SetFont(Upp::StdFont().Bold()).RightPosZ(4, 212).TopPosZ(140, 52))
	ITEM(Upp::EditIntSpin, blinkinterval, Min(100).Max(60000).NotNull(true).Tip(t_("Text blinking interval can be an nteger value between 100 - 60000 ms.")).RightPosZ(42, 75).TopPosZ(160, 20))
	ITEM(Upp::Option, hidemouse, SetLabel(t_("Hide mouse cursor while typing")).RightPosZ(20, 184).TopPosZ(216, 16))
	ITEM(Upp::Option, bell, SetLabel(t_("Bell notifications")).RightPosZ(20, 184).TopPosZ(233, 16))
	ITEM(Upp::Label, dv___13, SetLabel(t_("Blink interval")).RightPosZ(124, 80).TopPosZ(160, 20))
	ITEM(Upp::Label, dv___14, SetLabel(t_("Line spacing")).RightPosZ(124, 80).TopPosZ(24, 20))
	ITEM(Upp::Label, dv___15, SetLabel(t_("Style")).RightPosZ(148, 56).TopPosZ(72, 20))
	ITEM(Upp::LabelBox, dv___16, SetLabel(t_("Font")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 4).TopPosZ(4, 52))
	ITEM(Upp::LabelBox, dv___17, SetLabel(t_("Cursor")).SetFont(Upp::StdFont().Bold()).RightPosZ(4, 212).TopPosZ(56, 80))
	ITEM(Upp::LabelBox, dv___18, SetLabel(t_("Color Profiles")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 220).VSizePosZ(56, 8))
	ITEM(Palettes, colorprofiles, HSizePosZ(8, 225).VSizePosZ(71, 91))
	ITEM(Upp::LabelBox, dv___20, SetLabel(t_("Misc.")).SetFont(Upp::StdFont().Bold()).RightPosZ(4, 212).VSizePosZ(196, 8))
	ITEM(Upp::Label, dv___21, SetLabel(t_("ms")).RightPosZ(14, 20).TopPosZ(160, 19))
	ITEM(Upp::Label, dv___22, SetLabel(t_("px")).RightPosZ(14, 20).TopPosZ(23, 19))
END_LAYOUT

LAYOUT(EmulationProfileLayout, 622, 394)
	ITEM(Upp::DropList, charset, HSizePosZ(8, 233).TopPosZ(27, 20))
	ITEM(Upp::DropList, erasechar, LeftPosZ(211, 110).TopPosZ(79, 20))
	ITEM(Upp::DropList, keystyle, LeftPosZ(211, 110).TopPosZ(104, 20))
	ITEM(Upp::Option, keynavigation, SetLabel(t_("Allow key navigation")).LeftPosZ(8, 340).TopPosZ(165, 16))
	ITEM(Upp::Option, altescapes, SetLabel(t_("ALT modifier escapes keys")).LeftPosZ(8, 340).TopPosZ(133, 16))
	ITEM(Upp::Option, altshifts, SetLabel(t_("ALT modifier shifts keys")).LeftPosZ(8, 340).TopPosZ(149, 16))
	ITEM(Upp::EditIntSpin, wheelstep, Min(1).Max(256).LeftPosZ(211, 110).TopPosZ(230, 20))
	ITEM(Upp::DropList, overridetracking, LeftPosZ(211, 110).TopPosZ(205, 20))
	ITEM(Upp::Option, alternatescroll, SetLabel(t_("Alternate scroll")).LeftPosZ(8, 340).TopPosZ(261, 16))
	ITEM(Upp::Option, filter, SetLabel(t_("Filter out control bytes")).HSizePosZ(8, 274).TopPosZ(310, 16))
	ITEM(Upp::Option, hyperlinks, SetLabel(t_("Hyperlinks")).RightPosZ(38, 174).TopPosZ(218, 16))
	ITEM(Upp::Option, images, SetLabel(t_("Inline Images")).RightPosZ(38, 174).TopPosZ(200, 16))
	ITEM(Upp::Option, delayedrefresh, SetLabel(t_("Delayed display refresh")).RightPosZ(38, 174).TopPosZ(234, 16))
	ITEM(Upp::Option, lazyresize, SetLabel(t_("Lazy window resize")).RightPosZ(38, 174).TopPosZ(250, 16))
	ITEM(Upp::Option, rewrap, SetLabel(t_("Reverse wrap")).RightPosZ(38, 174).TopPosZ(266, 16))
	ITEM(Upp::Option, noscroll, SetLabel(t_("Don't scroll the page on new output")).RightPosZ(16, 196).TopPosZ(283, 16))
	ITEM(Upp::OptionBox, history, SetLabel(t_("History Buffer")).SetFont(Upp::StdFont().Bold()).RightPosZ(9, 212).TopPosZ(4, 57))
	ITEM(Upp::EditIntSpin, historysize, Min(1).Max(65536).RightPosZ(15, 104).TopPosZ(27, 20))
	ITEM(Upp::Option, windowreports, SetLabel(t_("Window  reports")).RightPosZ(17, 195).TopPosZ(82, 16))
	ITEM(Upp::Option, windowactions, SetLabel(t_("Window  actions")).RightPosZ(17, 195).TopPosZ(98, 16))
	ITEM(Upp::Option, readclipboard, SetLabel(t_("Allow read acccess")).RightPosZ(18, 194).TopPosZ(139, 16))
	ITEM(Upp::Option, writeclipboard, SetLabel(t_("Allow write acccess")).RightPosZ(18, 194).TopPosZ(155, 16))
	ITEM(Upp::Label, dv___22, SetLabel(t_("Max. lines")).RightPosZ(121, 91).TopPosZ(27, 20))
	ITEM(Upp::LabelBox, dv___23, SetLabel(t_("Other")).SetFont(Upp::StdFont().Bold()).RightPosZ(8, 212).TopPosZ(182, 198))
	ITEM(Upp::LabelBox, dv___24, SetLabel(t_("Window Operations")).SetFont(Upp::StdFont().Bold()).RightPosZ(9, 212).TopPosZ(65, 53))
	ITEM(Upp::LabelBox, dv___25, SetLabel(t_("Application Clipboard Access")).SetFont(Upp::StdFont().Bold()).RightPosZ(8, 212).TopPosZ(124, 53))
	ITEM(Upp::Label, dv___26, SetLabel(t_("Function key behavior")).LeftPosZ(8, 172).TopPosZ(106, 16))
	ITEM(Upp::Label, dv___27, SetLabel(t_("Backspace key sends")).LeftPosZ(8, 172).TopPosZ(81, 16))
	ITEM(Upp::Label, dv___28, SetLabel(t_("Mouse wheel step")).LeftPosZ(8, 172).TopPosZ(232, 16))
	ITEM(Upp::Label, dv___29, SetLabel(t_("Override mouse tracking mode")).LeftPosZ(8, 172).TopPosZ(207, 16))
	ITEM(Upp::LabelBox, dv___30, SetLabel(t_("Mouse")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 227).TopPosZ(190, 94))
	ITEM(Upp::LabelBox, dv___31, SetLabel(t_("Keyboard")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 227).TopPosZ(61, 129))
	ITEM(Upp::LabelBox, dv___32, SetLabel(t_("Encoding")).SetFont(Upp::StdFont().Bold()).HSizePosZ(4, 227).TopPosZ(4, 57))
	ITEM(Upp::Label, dv___33, SetLabel(t_("lines")).LeftPosZ(332, 63).TopPosZ(230, 19))
	ITEM(Upp::Label, dv___34, SetLabel(t_("key")).LeftPosZ(332, 63).TopPosZ(205, 19))
	ITEM(Upp::LabelBox, dv___35, SetLabel(t_("DnD")).HSizePosZ(4, 227).TopPosZ(291, 54))
END_LAYOUT

LAYOUT(SettingsLayout, 587, 426)
	ITEM(Upp::DropList, direction, LeftPosZ(159, 135).TopPosZ(63, 20))
	ITEM(Upp::Option, wheel, SetLabel(t_("Stack wheel mode")).LeftPosZ(8, 148).TopPosZ(111, 20))
	ITEM(Upp::EditIntSpin, animation, Min(0).Max(1000).Tip(t_("Setting  a lower than 100 ms will effectively disable the animation.")).LeftPosZ(159, 135).TopPosZ(87, 20))
	ITEM(Upp::Option, showmenu, SetLabel(t_("Show menu bar")).LeftPosZ(8, 148).TopPosZ(145, 20))
	ITEM(Upp::Option, showtitle, SetLabel(t_("Show title bar")).LeftPosZ(8, 148).TopPosZ(167, 20))
	ITEM(Upp::Option, serializeplacement, SetLabel(t_("Save window geometry")).LeftPosZ(8, 148).TopPosZ(189, 20))
	ITEM(Upp::Option, custominput, SetLabel(t_("Use custom unicode input method")).Tip(t_("Enables the custom unicode input method for inserting unicode codepoints.")).LeftPosZ(8, 285).TopPosZ(234, 20))
	ITEM(Upp::Option, savescreenshot, SetLabel(t_("Save screenshot as a file")).Tip(t_("Saves screenshot as file instead of placing it in clipboard.")).LeftPosZ(8, 285).TopPosZ(212, 20))
	ITEM(Upp::DropList, titlepos, LeftPosZ(159, 135).TopPosZ(17, 20))
	ITEM(Upp::DropList, finderpos, LeftPosZ(159, 135).TopPosZ(39, 20))
	ITEM(Upp::LineEdit, pagesizes, SetFont(Upp::Monospace()).Tip(t_("Page size format is  COLUMNSxROWS. Valid size range is between 2 to 300 cells.")).LeftPosZ(8, 153).TopPosZ(297, 96))
	ITEM(Upp::Label, dv___11, SetLabel(t_("Titlebar Placement")).LeftPosZ(8, 148).TopPosZ(17, 20))
	ITEM(Upp::Label, dv___12, SetLabel(t_("Finder Placement")).LeftPosZ(8, 148).TopPosZ(39, 20))
	ITEM(Upp::Label, dv___13, SetLabel(t_("Stack animation duration")).LeftPosZ(8, 148).TopPosZ(87, 20))
	ITEM(Upp::Label, dv___14, SetLabel(t_("Stack transition mode")).LeftPosZ(8, 148).TopPosZ(63, 20))
	ITEM(Upp::Label, dv___15, SetLabel(t_("ms")).LeftPosZ(302, 24).TopPosZ(87, 20))
	ITEM(Upp::Label, dv___16, SetLabel(t_("Custom page sizes")).LeftPosZ(8, 148).TopPosZ(274, 20))
END_LAYOUT

LAYOUT(FontSelectorLayout, 340, 296)
	ITEM(Upp::ColumnList, font, HSizePosZ(3, 3).VSizePosZ(4, 142))
	ITEM(Upp::SliderCtrl, slider, HSizePosZ(64, 86).BottomPosZ(119, 20))
	ITEM(Upp::EditIntSpin, fontsize, Min(6).Max(128).RightPosZ(3, 64).BottomPosZ(119, 20))
	ITEM(Upp::Button, ok, SetLabel(t_("OK")).RightPosZ(5, 56).BottomPosZ(4, 24))
	ITEM(Upp::Button, cancel, SetLabel(t_("Cancel")).RightPosZ(64, 56).BottomPosZ(4, 24))
	ITEM(Upp::StaticText, preview, SetText(t_("The quick brown fox jumps over the lazy dog.")).SetAlign(Upp::ALIGN_CENTER).HSizePosZ(13, 14).BottomPosZ(46, 54))
	ITEM(Upp::Label, dv___6, SetLabel(t_("Size")).LeftPosZ(8, 48).BottomPosZ(119, 20))
	ITEM(Upp::LabelBox, dv___7, SetLabel(t_("Preview")).SetFont(Upp::StdFont().Bold()).HSizePosZ(3, 3).BottomPosZ(36, 80))
END_LAYOUT

LAYOUT(PaletteListLayout, 400, 200)
	ITEM(Upp::ArrayCtrl, list, Header(false).AskRemove(false).VertGrid(false).HorzGrid(false).HSizePosZ(2, -1).VSizePosZ(1, 4))
END_LAYOUT

LAYOUT(ColorPaletteLayout, 400, 334)
	ITEM(Upp::ArrayCtrl, colors, AutoHideSb(true).AskRemove(false).VertGrid(false).HorzGrid(false).SetLineCy(24).HSizePosZ(1, 1).VSizePosZ(1, 33))
	ITEM(Upp::Button, ok, SetLabel(t_("OK")).RightPosZ(5, 56).BottomPosZ(4, 24))
	ITEM(Upp::Button, cancel, SetLabel(t_("Cancel")).RightPosZ(64, 56).BottomPosZ(4, 24))
END_LAYOUT

LAYOUT(AboutLayout, 400, 200)
	ITEM(Upp::RichTextCtrl, txt, HSizePosZ(0, 1).VSizePosZ(1, 1))
END_LAYOUT

LAYOUT(NavigatorLayout, 593, 30)
	ITEM(Upp::EditString, search, HSizePosZ(128, 129).TopPosZ(5, 20))
END_LAYOUT

LAYOUT(FinderLayout, 526, 24)
	ITEM(ToolButton, prev, LeftPosZ(186, 19).TopPosZ(3, 18))
	ITEM(ToolButton, next, LeftPosZ(206, 19).TopPosZ(3, 18))
	ITEM(ToolButton, begin, LeftPosZ(226, 19).TopPosZ(3, 18))
	ITEM(ToolButton, end, LeftPosZ(246, 19).TopPosZ(3, 18))
	ITEM(Upp::StaticText, status, SetText(t_("Nothing to search...")).HSizePosZ(353, 34).TopPosZ(3, 18))
	ITEM(Upp::Option, showall, SetLabel(t_("Show all")).LeftPosZ(270, 56).TopPosZ(4, 16))
END_LAYOUT

